{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/SignIn.js","components/screens/Profile.js","components/screens/Signup.js","components/screens/CreatePost.js","reducers/userReducer.js","components/screens/UserProfile.js","components/screens/SubscribesUserPosts.js","components/screens/Reset.js","components/screens/Newpassword.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","searchModal","useRef","search","setSearch","useState","userDetails","setUserDetails","state","dispatch","useContext","UserContext","history","useHistory","useEffect","M","Modal","init","current","React","createElement","className","Link","to","id","key","data-target","style","color","onClick","localStorage","clear","type","push","class","ref","placeholder","value","onChange","e","fetchUsers","query","target","fetch","method","headers","body","JSON","stringify","then","res","json","results","user","map","item","_id","getInstance","close","email","Home","data","setData","getItem","result","console","log","posts","padding","postedBy","name","float","deletePost","postid","concat","Authorization","newData","filter","src","photo","likes","includes","postId","catch","err","length","title","comments","record","fontWeight","text","onSubmit","makeComment","preventDefault","SignIn","password","setPasword","setEmail","test","error","toast","html","classes","setItem","token","payload","Profile","mypics","setPics","image","setImage","mypost","FormData","append","process","local","baseimage","pic","url","maxWidth","margin","borderBottom","display","justifyContent","width","height","borderRadius","followers","following","updatePhoto","file","files","alt","setName","setUrl","undefined","uploadFields","message","PostData","uploadPic","CretePost","setTitle","setBody","textAlign","postDetails","imagebase","reducer","action","userProfile","setProfile","userid","useParams","showfollow","setShowFollow","Fragment","followId","prevState","unfollowId","newFollower","Reset","createContext","Routing","parse","location","pathname","startsWith","Switch","Route","exact","path","Signin","Signup","CreatePost","UserProfile","SubscribedUserPosts","NewPassword","App","useReducer","Provider","BrowserRouter","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.966fc429.chunk.js","sourcesContent":["import React,{useContext,useRef,useEffect,useState} from 'react'\r\nimport {Link ,useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../App'\r\nimport M from 'materialize-css'\r\nconst NavBar = ()=>{\r\n    const  searchModal = useRef(null)\r\n    const [search,setSearch] = useState('')\r\n    const [userDetails,setUserDetails] = useState([])\r\n     const {state,dispatch} = useContext(UserContext)\r\n     const history = useHistory()\r\n     useEffect(()=>{\r\n         M.Modal.init(searchModal.current)\r\n     },[])\r\n     const renderList = ()=>{\r\n       if(state){\r\n           return [\r\n            <li key=\"1\"><i  data-target=\"modal1\" className=\"large material-icons modal-trigger\" style={{color:\"black\"}}>search</i></li>,\r\n            <li key=\"2\"><Link to=\"/profile\">Profile</Link></li>,\r\n            <li key=\"3\"><Link to=\"/create\">Create Post</Link></li>,\r\n            <li key=\"4\"><Link to=\"/myfollowingpost\">My following Posts</Link></li>,\r\n            <li  key=\"5\">\r\n             <button className=\"btn #c62828 red darken-3\"\r\n            onClick={()=>{\r\n              localStorage.clear()\r\n              dispatch({type:\"CLEAR\"})\r\n              history.push('/signin')\r\n            }}\r\n            >\r\n                Logout\r\n            </button>\r\n            </li>\r\n         \r\n            \r\n           ]\r\n       }else{\r\n         return [\r\n          <li  key=\"6\"><Link to=\"/signin\">Signin</Link></li>,\r\n          <li  key=\"7\"><Link to=\"/signup\">Signup</Link></li>\r\n         \r\n         ]\r\n       }\r\n     }\r\n\r\n\r\n     const fetchUsers = (query)=>{\r\n        setSearch(query)\r\n        fetch('/search-users',{\r\n          method:\"post\",\r\n          headers:{\r\n            \"Content-Type\":\"application/json\"\r\n          },\r\n          body:JSON.stringify({\r\n            query\r\n          })\r\n        }).then(res=>res.json())\r\n        .then(results=>{\r\n          setUserDetails(results.user)\r\n        })\r\n     }\r\n    return(\r\n        <nav>\r\n        <div className=\"nav-wrapper white\">\r\n          <Link to={state?\"/\":\"/signin\"} className=\"brand-logo left\">Instagram</Link>\r\n          <ul id=\"nav-mobile\" className=\"right\">\r\n             {renderList()}\r\n  \r\n          </ul>\r\n        </div>\r\n        <div id=\"modal1\" class=\"modal\" ref={searchModal} style={{color:\"black\"}}>\r\n          <div className=\"modal-content\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search users\"\r\n            value={search}\r\n            onChange={(e)=>fetchUsers(e.target.value)}\r\n            />\r\n             <ul className=\"collection\">\r\n               {userDetails.map(item=>{\r\n                 return <Link to={item._id !== state._id ? \"/profile/\"+item._id:'/profile'} onClick={()=>{\r\n                   M.Modal.getInstance(searchModal.current).close()\r\n                   setSearch('')\r\n                 }}><li className=\"collection-item\">{item.email}</li></Link> \r\n               })}\r\n               \r\n              </ul>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button className=\"modal-close waves-effect waves-green btn-flat\" onClick={()=>setSearch('')}>close</button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default NavBar","import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/allpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/unlike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home","import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../../App'\r\nimport M from 'materialize-css'\r\nconst SignIn  = ()=>{\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               localStorage.setItem(\"jwt\",data.token)\r\n               localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n               dispatch({type:\"USER\",payload:data.user})\r\n               M.toast({html:\"signedin success\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n                Login\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/signup\">Dont have an account ?</Link>\r\n            </h5>\r\n            <h6>\r\n                <Link to=\"/reset\">Forgot password ?</Link>\r\n            </h6>\r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn","import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile  = ()=>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const [image,setImage] = useState(\"\")\r\n    useEffect(()=>{\r\n       fetch('/mypost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setPics(result.mypost)\r\n       })\r\n    },[])\r\n    useEffect(()=>{\r\n       if(image){\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"new-insta\")\r\n        data.append(\"cloud_name\",process.env.local.baseimage)\r\n        fetch(`https://api.cloudinary.com/v1_1/${process.env.local.baseimage}/image/upload`,{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n    \r\n       \r\n           fetch('/updatepic',{\r\n               method:\"put\",\r\n               headers:{\r\n                   \"Content-Type\":\"application/json\",\r\n                   \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n               },\r\n               body:JSON.stringify({\r\n                   pic:data.url\r\n               })\r\n           }).then(res=>res.json())\r\n           .then(result=>{\r\n               console.log(result)\r\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n               //window.location.reload()\r\n           })\r\n       \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n       }\r\n    },[image])\r\n    const updatePhoto = (file)=>{\r\n        setImage(file)\r\n    }\r\n   return (\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n              margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n\r\n         \r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n              \r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={state?state.pic:\"loading\"}\r\n                   />\r\n                 \r\n               </div>\r\n               <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h5>{state?state.email:\"loading\"}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n                       <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n           </div>\r\n        \r\n            <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Update pic</span>\r\n                <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            </div>      \r\n           <div className=\"gallery\">\r\n               {\r\n                   mypics.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","import React,{useState,useEffect} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst SignIn  = ()=>{\r\n    const history = useHistory()\r\n    const [name,setName] = useState(\"\")\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(undefined)\r\n    useEffect(()=>{\r\n        if(url){\r\n            uploadFields()\r\n        }\r\n    },[url])\r\n    const uploadPic = ()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"new-insta\")\r\n        data.append(\"cloud_name\",process.env.local.baseimage)\r\n        fetch(`https://api.cloudinary.com/v1_1/${process.env.local.baseimage}/image/upload`,{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n           setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const uploadFields = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const PostData = ()=>{\r\n        if(image){\r\n            uploadPic()\r\n        }else{\r\n            uploadFields()\r\n        }\r\n       \r\n    }\r\n\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n            value={name}\r\n            onChange={(e)=>setName(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Upload pic</span>\r\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n                SignUP\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/signin\">Already have an account ?</Link>\r\n            </h5>\r\n             \r\n               \r\n         \r\n            \r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn","import React,{useState,useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\nconst CretePost = ()=>{\r\n    const history = useHistory()\r\n    const [title,setTitle] = useState(\"\")\r\n    const [body,setBody] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n    useEffect(()=>{\r\n       if(url){\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n    \r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    },[url])\r\n  \r\n   const postDetails = ()=>{\r\n       const data = new FormData()\r\n       data.append(\"file\",image)\r\n       data.append(\"upload_preset\",\"new-insta\")\r\n       data.append(\"cloud_name\",process.env.local.imagebase)\r\n       fetch(`https://api.cloudinary.com/v1_1/${process.env.local.imagebase}/image/upload`,{\r\n           method:\"post\",\r\n           body:data\r\n       })\r\n       .then(res=>res.json())\r\n       .then(data=>{\r\n          setUrl(data.url)\r\n       })\r\n       .catch(err=>{\r\n           console.log(err)\r\n       })\r\n\r\n    \r\n   }\r\n \r\n\r\n   return(\r\n       <div className=\"card input-filed\"\r\n       style={{\r\n           margin:\"30px auto\",\r\n           maxWidth:\"500px\",\r\n           padding:\"20px\",\r\n           textAlign:\"center\"\r\n       }}\r\n       >\r\n           <input \r\n           type=\"text\"\r\n            placeholder=\"title\"\r\n            value={title}\r\n            onChange={(e)=>setTitle(e.target.value)}\r\n            />\r\n           <input\r\n            type=\"text\"\r\n             placeholder=\"body\"\r\n             value={body}\r\n            onChange={(e)=>setBody(e.target.value)}\r\n             />\r\n           <div className=\"file-field input-field\">\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Upload Image</span>\r\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>postDetails()}\r\n            \r\n            >\r\n                Submit post\r\n            </button>\r\n\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default CretePost","export const initialState = null\r\n\r\nexport const reducer = (state,action)=>{\r\n    if(action.type==\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return {\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    return state\r\n} ","import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\nconst Profile  = ()=>{\r\n    const [userProfile,setProfile] = useState(null)\r\n    \r\n    const {state,dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    useEffect(()=>{\r\n       fetch(`/user/${userid}`,{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           //console.log(result)\r\n         \r\n            setProfile(result)\r\n       })\r\n    },[])\r\n\r\n\r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n        \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n             setProfile((prevState)=>{\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:[...prevState.user.followers,data._id]\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(false)\r\n        })\r\n    }\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n             setProfile((prevState)=>{\r\n                const newFollower = prevState.user.followers.filter(item=>item != data._id )\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:newFollower\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(true)\r\n             \r\n        })\r\n    }\r\n   return (\r\n       <>\r\n       {userProfile ?\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n               margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={userProfile.user.pic}\r\n                   />\r\n               </div>\r\n               <div>\r\n                   <h4>{userProfile.user.name}</h4>\r\n                   <h5>{userProfile.user.email}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{userProfile.posts.length} posts</h6>\r\n                       <h6>{userProfile.user.followers.length} followers</h6>\r\n                       <h6>{userProfile.user.following.length} following</h6>\r\n                   </div>\r\n                   {showfollow?\r\n                   <button style={{\r\n                       margin:\"10px\"\r\n                   }} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={()=>followUser()}\r\n                    >\r\n                        Follow\r\n                    </button>\r\n                    : \r\n                    <button\r\n                    style={{\r\n                        margin:\"10px\"\r\n                    }}\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={()=>unfollowUser()}\r\n                    >\r\n                        UnFollow\r\n                    </button>\r\n                    }\r\n                   \r\n                  \r\n\r\n               </div>\r\n           </div>\r\n     \r\n           <div className=\"gallery\">\r\n               {\r\n                   userProfile.posts.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n       \r\n       \r\n       : <h2>loading...!</h2>}\r\n       \r\n       </>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/getsubpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/unlike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home","import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst Reset  = ()=>{\r\n    const history = useHistory()\r\n    const [email,setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch('/reset-password',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n               reset password\r\n            </button>\r\n            \r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Reset","import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory,useParams} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst SignIn  = ()=>{\r\n    const history = useHistory()\r\n    const [password,setPasword] = useState(\"\")\r\n    const {token} = useParams()\r\n    console.log(token)\r\n    const PostData = ()=>{\r\n        fetch(\"/new-password\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                token\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n        \r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"enter a new password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n               Update password\r\n            </button>\r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn","import React,{useEffect,createContext,useReducer,useContext} from 'react';\r\nimport NavBar from './components/Navbar'\r\nimport \"./App.css\"\r\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\r\nimport Home from './components/screens/Home'\r\nimport Signin from './components/screens/SignIn'\r\nimport Profile from './components/screens/Profile'\r\nimport Signup from './components/screens/Signup'\r\nimport CreatePost from './components/screens/CreatePost'\r\nimport {reducer,initialState} from './reducers/userReducer'\r\nimport UserProfile from './components/screens/UserProfile'\r\nimport SubscribedUserPosts from './components/screens/SubscribesUserPosts'\r\nimport Reset from './components/screens/Reset'\r\nimport NewPassword from './components/screens/Newpassword'\r\nexport const UserContext = createContext()\r\n\r\n\r\nconst Routing = ()=>{\r\n  const history = useHistory()\r\n  const {state,dispatch} = useContext(UserContext)\r\n  useEffect(()=>{\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    if(user){\r\n      dispatch({type:\"USER\",payload:user})\r\n    }else{\r\n      if(!history.location.pathname.startsWith('/reset'))\r\n           history.push('/signin')\r\n    }\r\n  },[])\r\n  return(\r\n    <Switch>\r\n      <Route exact path=\"/\" >\r\n      <Home />\r\n      </Route>\r\n      <Route path=\"/signin\">\r\n        <Signin />\r\n      </Route>\r\n      <Route path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n      <Route exact path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n      <Route path=\"/create\">\r\n        <CreatePost/>\r\n      </Route>\r\n      <Route path=\"/profile/:userid\">\r\n        <UserProfile />\r\n      </Route>\r\n      <Route path=\"/myfollowingpost\">\r\n        <SubscribedUserPosts />\r\n      </Route>\r\n      <Route exact path=\"/reset\">\r\n        <Reset/>\r\n      </Route>\r\n      <Route path=\"/reset/:token\">\r\n        <NewPassword />\r\n      </Route>\r\n      \r\n    </Switch>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const [state,dispatch] = useReducer(reducer,initialState)\r\n  return (\r\n    <UserContext.Provider value={{state,dispatch}}>\r\n    <BrowserRouter>\r\n      <NavBar />\r\n      <Routing />\r\n      \r\n    </BrowserRouter>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}